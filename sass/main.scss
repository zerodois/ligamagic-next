@import url('https://fonts.googleapis.com/css?family=Roboto:400,500');
@import url('https://fonts.googleapis.com/css?family=Product+Sans:100');
@import '_variables';

$types: ('success': $success, 'danger': $danger, 'primary': $primary);

html, body, #__next {
  padding: 0;
  margin: 0;
  height: 100%;
  font-family: 'Roboto', sans-serif;
  background-color: $bg;
  overflow-x: hidden;
  color: $font;
}
.page {
  height: 100%;
}

.header {
  padding: 1rem 0;
  justify-content: flex-start;
  align-items: center;
  &__title {
    text-transform: uppercase;
    font-family: 'Product Sans', sans-serif;
    color: $font;
  }
  img {
    max-width: 3.5vw;
    margin-right: 1rem;
  }
}

.link {
  text-decoration: none;
  color: $font;
  font-size: 1rem;
  &:hover {
    color: $primary;
  }
  &--primary {
    color: var(--primary);
    &:hover {
      text-decoration: underline;
    }
  }
}

.no-resize {
  resize: none;
}

.input {
  width: 100%;
  box-sizing: border-box;
  border: thin solid transparent;
  border-radius: 6px;
  background: rgba(150, 150, 150, .1);
  outline: none;
  padding: .75rem 1rem;
  font-size: .85rem;
  color: $font;
  font-family: 'Roboto', sans-serif;
  &::placeholder {
    color: darken($font, 30%);
  }
  &:focus {
    box-shadow: 0 0 3pt 2pt rgba(255, 255, 255, .1);
  }
  &--error {
    border-color: $danger;
  }
  &--success {
    border-color: $success;
  }
  &-text-error {
    color: $danger;
    font-size: .8rem;
  }
}
textarea.input {
  padding: 1rem;
}

.no-select {
  -moz-user-select: none;
  -webkit-user-select: none;
  -ms-user-select: none;
}

.row {
  &:not(:first-child) {
    padding-top: .5rem;
  }
  padding-bottom: .5rem;
}
.pointer {
  cursor: pointer;
}

.fixed {
  position: fixed;
  top: 0;
  left: 0;
  z-index: 2;
}

.text {
  &--primary {
    color: var(--primary, #333);
  }
  &--bold {
    font-weight: 500;
  }
  &--uppercase {
    text-transform: uppercase;
  }
  &--left {
    text-align: left;
  }
  &--center {
    text-align: center;
  }
  &--justify {
    text-align: justify;
  }
  &--small {
    font-size: 0.8rem;
  }
}

.grid {
  display: grid;
  @for $i from 1 to 10 {
    &-#{$i} {
      grid-template-columns: repeat(#{$i}, 1fr);
    }
  }
}

.button {
  border: 0;
  display: inline-block;
  text-decoration: none;
  background: #ccc;
  color: $font;
  padding: .45rem .75rem;
  font-weight: 500;
  border-radius: 4px;
  flex: 1;
  text-align: center;
  font-size: 13px;
  font-family: 'Roboto', sans-serif;
  transition: background-color .25s linear;
  &:disabled {
    background-color: $neutral;
  }
  &--full {
    width: 100%;
  }
  &--rounded {
    background-image: linear-gradient(to right, var(--secondary), var(--color));
    border-radius: 200px;
    color: var(--font);
  }
  @each $type, $color in $types {
    &--#{$type} {
      background: $color;
    }
  }
}

.table {
  display: table;
  &__group {
    display: table-row-group;
  }
  &__row {
    display: table-row;
  }
  &__cell {
    display: table-cell;
  }
}

.spin {
  display: inline-block;
  animation: spin 1s infinite linear;
}
@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

.flex {
  display: flex;
  &-column {
    flex-direction: column;
  }
  &-1 {
    flex: 1;
  }
  &-center {
    justify-content: center;
    align-items: center;
  }
}

.board__res {
  height: 100vh;
  justify-content: center;
  width: 100vw;
  overflow-y: auto;
}
